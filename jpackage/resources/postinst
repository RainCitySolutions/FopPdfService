#!/bin/sh

FOP_USER=fop-pdf-user
LOG_DIR=/var/log/pdfGen
TMP_DIR=/tmp/pdfGen

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


echo "Handling $1 from $0"

case "$1" in
    configure)
    	adduser --system --quiet --shell /bin/false --home /opt/APPLICATION_PACKAGE \
			-c "User account for running the APPLICATION_PACKAGE" $FOP_USER || true

		cp /opt/APPLICATION_PACKAGE/lib/app/APPLICATION_PACKAGE.service /usr/lib/systemd/system
		chmod 644 /usr/lib/systemd/system/APPLICATION_PACKAGE.service
		
		[ -d $LOG_DIR ] || mkdir -p $LOG_DIR
		[ -d $TMP_DIR ] || mkdir -p $TMP_DIR

		dpkg-statoverride --update --add $FOP_USER $FOP_USER 4755 $LOG_DIR
		dpkg-statoverride --update --add $FOP_USER $FOP_USER 4755 $TMP_DIR
		
		for i in /opt/APPLICATION_PACKAGE; do
		    # only do something when no setting exists
		    if ! dpkg-statoverride --list $i >/dev/null 2>&1; then
		        #include: debconf processing, question about foo and bar
		        if [ "$RET" = "true" ] ; then
            		dpkg-statoverride --update --add $FOP_USER $FOP_USER 4755 $i
		        fi
    		fi
		done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ]; then
	deb-systemd-helper unmask 'APPLICATION_PACKAGE.service' >/dev/null || true
	
	if deb-systemd-helper --quiet was-enabled 'APPLICATION_PACKAGE.service'; then
		deb-systemd-helper enable 'APPLICATION_PACKAGE.service' >/dev/null || true
	else
		deb-systemd-helper update-state 'APPLICATION_PACKAGE.service' >/dev/null || true
	fi
	
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb_systemd_invoke $_dh_action 'APPLICATION_PACKAGE.service' >/dev/null || true
	fi
if

exit 0
