#!/bin/sh

FOP_USER=fop-pdf-user
LOG_DIR=/var/log/pdfGen
TMP_DIR=/tmp/pdfGen

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    	adduser --system --quiet --shell /bin/false --home /opt/APPLICATION_PACKAGE \
			--comment "User account for running the APPLICATION_PACKAGE" $FOP_USER || true

		cp /opt/APPLICATION_PACKAGE/lib/app/APPLICATION_PACKAGE.service /usr/lib/systemd/system
		chmod 644 /usr/lib/systemd/system/APPLICATION_PACKAGE.service
		
		mkdir -p $LOG_DIR
		mkdir -p $TMP_DIR

		dpkg-statoverride --update --add $FOP_USER $FOP_USER 4755 $LOG_DIR
		dpkg-statoverride --update --add $FOP_USER $FOP_USER 4755 $TMP_DIR
		
		for i in /opt/APPLICATION_PACKAGE; do
		    # only do something when no setting exists
		    if ! dpkg-statoverride --list $i >/dev/null 2>&1; then
		        #include: debconf processing, question about foo and bar
		        if [ "$RET" = "true" ] ; then
            		dpkg-statoverride --update --add $FOP_USER $FOP_USER 4755 $i
		        fi
    		fi
		done

		deb-systemd-helper enable 'APPLICATION_PACKAGE.service'
		deb-systemd-helper start 'APPLICATION_PACKAGE.service'
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
