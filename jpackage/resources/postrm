#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


echo "Handling $1 in postrm"

if [ "$1" = "remove" ] && [ -d /run/systemd/system ]; then
	systemctrl --system daemon-reload >/dev/null || true
fi

if [ "$1" = "remove" ]; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper mask 'APPLICATION_PACKAGE.service' >/dev/null || true
	fi
fi

if [ "$1" = "purge" ] ; then
	if [ -x "/usr/bin/deb-systemd-helper" ]; then
		deb-systemd-helper purge 'APPLICATION_PACKAGE.service' >/dev/null || true
		deb-systemd-helper unmask 'APPLICATION_PACKAGE.service' >/dev/null || true
	fi

	for i in /opt/APPLICATION_PACKAGE; do
    if dpkg-statoverride --list $i >/dev/null 2>&1; then
	        dpkg-statoverride --remove $i
	    fi
	done
fi

#case "$1" in
#    upgrade|failed-upgrade|abort-upgrade)
#		deb-systemd-helper start 'APPLICATION_PACKAGE.service' || true
#    ;;
#
#    purge|remove|abort-install|disappear)
#    	[ -f /usr/lib/systemd/system/APPLICATION_PACKAGE.service ] && rm /usr/lib/systemd/system/APPLICATION_PACKAGE.service
#    	
#    	for i in /opt/APPLICATION_PACKAGE; do
#	    if dpkg-statoverride --list $i >/dev/null 2>&1; then
#		        dpkg-statoverride --remove $i
#		    fi
#		done
#    ;;

#    *)
#        echo "postrm called with unknown argument \`$1'" >&2
#        exit 1
#    ;;
#esac

#exit 0